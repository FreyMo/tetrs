# Instruction + template repo: https://github.com/FedericoPonzi/rust-ci
name: CI

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - '*.*.*'

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    name: Test
    needs: [style]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build: [stable, beta, nightly]
        include:
          - build: beta
            rust: beta
          - build: nightly
            rust: nightly
            benches: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust || 'stable' }}
          profile: minimal
          override: true

      - name: Build debug
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.features }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.features }}

  deploy_windows:
    name: deploy
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    strategy: 
      matrix:
        target: [ x86_64-pc-windows-msvc, aarch64-pc-windows-msvc ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          #strip target/${{ matrix.target }}/release/tetrs
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../tetrs-${{ matrix.target }}.tar.gz tetrs.exe
          cd -

      - name: Publish
        uses: actions/upload-artifact@v3
        with:
          name: tetrs-${{ matrix.target }}.tar.gz
          path: tetrs-${{ matrix.target }}.tar.gz

  deploy_mac:
    name: deploy
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    strategy: 
      matrix:
        target: [ aarch64-apple-darwin, x86_64-apple-darwin ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          #strip target/${{ matrix.target }}/release/tetrs
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../tetrs-${{ matrix.target }}.tar.gz tetrs
          cd -

      - name: Publish
        uses: actions/upload-artifact@v3
        with:
          name: tetrs-${{ matrix.target }}.tar.gz
          path: tetrs-${{ matrix.target }}.tar.gz

  deploy_linux:
    name: deploy
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [ aarch64-unknown-linux-gnu, x86_64-unknown-linux-gnu ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          #strip target/${{ matrix.target }}/release/tetrs
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../tetrs-${{ matrix.target }}.tar.gz tetrs
          cd -

      - name: Publish
        uses: actions/upload-artifact@v3
        with:
          name: tetrs-${{ matrix.target }}.tar.gz
          path: tetrs-${{ matrix.target }}.tar.gz
